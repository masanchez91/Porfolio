---
const currentYear = new Date().getFullYear()

const navItems = [
  {
    title: "Inicio",
    label: "inicio",
    url: "/",
    icon: "🏠"
  },
  {
    title: "Servicios",
    label: "servicios", 
    url: "/#servicios",
    icon: "⚙️"
  },
  {
    title: "Proyectos",
    label: "proyectos",
    url: "/#proyectos", 
    icon: "🚀"
  },
  {
    title: "Agencia",
    label: "agencia",
    url: "/#agencia",
    icon: "👥"
  },
  {
    title: "Contacto",
    label: "contacto",
    url: "/#contacto",
    icon: "📧"
  },
  {
    title: "Blog",
    label: "blog",
    url: "/blog",
    icon: "📝"
  },
]
---

<!-- Botón hamburguesa -->
<button
  id="mobile-menu-button"
  class="md:hidden fixed top-4 right-4 z-[9999] flex items-center justify-center w-14 h-14 rounded-2xl bg-gray-900 border-2 border-green-500 text-white shadow-2xl"
  aria-label="Abrir menú"
  type="button"
>
  <div class="hamburger">
    <span></span>
    <span></span>
    <span></span>
  </div>
</button>

<!-- Menú móvil -->
<div
  id="mobile-menu"
  class="fixed inset-0 z-[9998] bg-gray-900 text-white hidden overflow-y-auto"
>
  <!-- Header fijo -->
  <div class="sticky top-0 bg-gray-900 z-10 flex items-center justify-between p-6 border-b border-green-500">
    <div class="flex items-center space-x-3">
      <img
        src="/holycode.webp"
        alt="The Holy Code"
        class="w-10 h-10 rounded-full border-2 border-green-500"
      />
      <span class="font-bold text-xl text-white">The Holy Code</span>
    </div>
    <button
      id="mobile-menu-close"
      class="flex items-center justify-center w-12 h-12 rounded-full bg-gray-800 text-white hover:bg-red-600 transition-colors"
      aria-label="Cerrar menú"
      type="button"
    >
      <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
      </svg>
    </button>
  </div>

  <!-- Contenido scrolleable -->
  <div class="flex flex-col min-h-full">
    <!-- Enlaces -->
    <div class="p-6 space-y-4">
      {navItems.map((item) => (
        <a
          href={item.url}
          class="mobile-nav-link flex items-center space-x-4 p-6 rounded-xl bg-gray-800 border border-green-500 text-white hover:bg-green-600 transition-all"
        >
          <span class="text-2xl">
            {item.icon}
          </span>
          <span class="font-medium text-xl">
            {item.title}
          </span>
          <svg class="w-6 h-6 ml-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
          </svg>
        </a>
      ))}
    </div>

    <!-- Theme Toggle Section - SIEMPRE VISIBLE -->
    <div class="p-6 border-t border-green-500 bg-gray-900">
      <div class="space-y-4">
        <h3 class="text-white font-medium text-lg mb-4 text-center">🌙 Cambiar Tema</h3>
        <div class="grid grid-cols-3 gap-3">
          <button
            class="theme-btn flex flex-col items-center p-3 bg-gray-800 border-2 border-green-500 rounded-xl text-white hover:bg-green-600 transition-all min-h-[80px]"
            data-theme="light"
          >
            <span class="text-2xl mb-1">☀️</span>
            <span class="text-sm font-medium">Claro</span>
          </button>
          <button
            class="theme-btn flex flex-col items-center p-3 bg-gray-800 border-2 border-green-500 rounded-xl text-white hover:bg-green-600 transition-all min-h-[80px]"
            data-theme="dark"
          >
            <span class="text-2xl mb-1">🌙</span>
            <span class="text-sm font-medium">Oscuro</span>
          </button>
          <button
            class="theme-btn flex flex-col items-center p-3 bg-gray-800 border-2 border-green-500 rounded-xl text-white hover:bg-green-600 transition-all min-h-[80px]"
            data-theme="system"
          >
            <span class="text-2xl mb-1">💻</span>
            <span class="text-sm font-medium">Sistema</span>
          </button>
        </div>
      </div>
      
      <div class="text-center mt-6 pb-4">
        <p class="text-xs text-gray-400">
          © {currentYear} The Holy Code
        </p>
        <p class="text-xs text-gray-500 mt-1">
          🚀 Desarrollando el futuro
        </p>
      </div>
    </div>
  </div>
</div>

<style>
  /* Hamburger básico */
  .hamburger {
    width: 24px;
    height: 18px;
    position: relative;
  }

  .hamburger span {
    display: block;
    position: absolute;
    height: 3px;
    width: 100%;
    background: white;
    border-radius: 2px;
    transition: all 0.3s ease;
  }

  .hamburger span:nth-child(1) {
    top: 0;
  }

  .hamburger span:nth-child(2) {
    top: 7px;
  }

  .hamburger span:nth-child(3) {
    top: 14px;
  }

  /* Hamburger activo */
  .hamburger.active span:nth-child(1) {
    transform: rotate(45deg);
    top: 7px;
    background: #10b981;
  }

  .hamburger.active span:nth-child(2) {
    opacity: 0;
  }

  .hamburger.active span:nth-child(3) {
    transform: rotate(-45deg);
    top: 7px;
    background: #10b981;
  }

  /* Menú visible */
  #mobile-menu.menu-visible {
    display: block !important;
  }

  /* Prevenir scroll cuando está abierto */
  body.menu-open {
    overflow: hidden !important;
    position: fixed !important;
    width: 100% !important;
  }

  /* Enlaces de navegación */
  .mobile-nav-link {
    min-height: 70px;
    display: flex !important;
    align-items: center !important;
    background: #1f2937 !important;
    color: white !important;
    border: 2px solid #10b981 !important;
  }

  .mobile-nav-link:hover {
    background: #10b981 !important;
    transform: scale(1.02);
  }

  /* Asegurar que todo sea visible */
  #mobile-menu {
    background: #111827 !important;
    color: white !important;
  }

  #mobile-menu * {
    color: white !important;
  }
</style>

<script>
  function initMobileMenu() {
    const menuButton = document.getElementById('mobile-menu-button');
    const menu = document.getElementById('mobile-menu');
    const closeButton = document.getElementById('mobile-menu-close');
    const hamburger = document.querySelector('.hamburger');
    const navLinks = document.querySelectorAll('.mobile-nav-link');
    
    if (!menuButton || !menu || !closeButton || !hamburger) {
      return;
    }

    let isOpen = false;

    function openMenu() {
      if (!menu || !hamburger) return;
      
      // Mostrar menú
      menu.style.display = 'block';
      menu.classList.add('menu-visible');
      
      // Cambiar hamburger
      hamburger.classList.add('active');
      
      // Prevenir scroll
      document.body.classList.add('menu-open');
      
      isOpen = true;
    }

    function closeMenu() {
      if (!menu || !hamburger) return;
      
      // Ocultar menú
      menu.style.display = 'none';
      menu.classList.remove('menu-visible');
      
      // Restaurar hamburger
      hamburger.classList.remove('active');
      
      // Restaurar scroll
      document.body.classList.remove('menu-open');
      
      isOpen = false;
    }

    // Event listeners
    menuButton.addEventListener('click', (e) => {
      e.preventDefault();
      e.stopPropagation();
      
      if (isOpen) {
        closeMenu();
      } else {
        openMenu();
      }
    });

    closeButton.addEventListener('click', (e) => {
      e.preventDefault();
      e.stopPropagation();
      closeMenu();
    });

    // Manejar navegación de enlaces
    navLinks.forEach((link, index) => {
      link.addEventListener('click', (e) => {
        const href = link.getAttribute('href');
        
        if (href) {
          if (href === '/blog' || href === '/') {
            // Enlaces externos - cerrar inmediatamente
            closeMenu();
          } else if (href.startsWith('/#')) {
            // Enlaces de ancla - manejar especialmente
            e.preventDefault();
            const targetId = href.substring(2);
            closeMenu();
            setTimeout(() => {
              const targetElement = document.getElementById(targetId);
              if (targetElement) {
                // Smooth scroll a la sección
                targetElement.scrollIntoView({ 
                  behavior: 'smooth',
                  block: 'start'
                });
              } else {
                // Fallback - ir a la página principal con el hash
                window.location.href = href;
              }
            }, 300);
          } else {
            // Otros enlaces - comportamiento normal
            setTimeout(closeMenu, 100);
          }
        }
      });
    });

    // Manejar theme toggle
    const themeButtons = document.querySelectorAll('.theme-btn');
    themeButtons.forEach(button => {
      button.addEventListener('click', () => {
        const theme = button.getAttribute('data-theme');
        
        if (theme) {
          try {
            localStorage.setItem('theme', theme);
            
            // Aplicar tema inmediatamente
            const isDark = theme === 'dark' || (theme === 'system' && window.matchMedia('(prefers-color-scheme: dark)').matches);
            document.documentElement.classList.toggle('dark', isDark);
            
                         // Feedback visual
             if (button instanceof HTMLElement) {
               button.style.background = '#10b981';
               setTimeout(() => {
                 button.style.background = '#1f2937';
               }, 200);
             }
          } catch (error) {
            console.error('❌ Error setting theme:', error);
          }
        }
      });
    });

    // Cerrar con escape
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && isOpen) {
        closeMenu();
      }
    });
  }

  // Initialize
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initMobileMenu);
  } else {
    initMobileMenu();
  }

  // Re-initialize on navigation
  document.addEventListener('astro:page-load', initMobileMenu);
</script> 