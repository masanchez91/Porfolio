---
import ThemeToggle from "./ThemeToggle.astro"
import MobileMenu from "./MobileMenu.astro"

const navItems = [
  {
    title: "Inicio",
    label: "inicio",
    url: "/",
  },
  {
    title: "Servicios", 
    label: "servicios",
    url: "/#servicios",
  },
  {
    title: "Proyectos",
    label: "proyectos", 
    url: "/#proyectos",
  },
  {
    title: "Contacto",
    label: "contacto",
    url: "/#contacto",
  },
  {
    title: "Blog",
    label: "blog",
    url: "/blog",
  },
]
---

<header
  class="fixed top-0 z-50 flex items-center justify-center w-full mx-auto mt-2"
>
  <!-- Logo/Brand solo visible en móvil -->
  <div class="md:hidden fixed top-4 left-4 z-50">
    <img 
      src="/holycode.webp" 
      alt="The Holy Code - Desarrollo Web México" 
      class="w-8 h-8 rounded-full"
      width="32"
      height="32"
      loading="lazy"
    />
  </div>

  <!-- Menú desktop -->
  <nav
    id="header-nav"
    class="hidden md:flex px-4 py-2 text-sm font-medium rounded-full text-holy-text-secondary justify-center items-center backdrop-blur-sm bg-holy-dark-secondary/80 border border-holy-border"
  >
    {
      navItems.map((link) => (
        <a
          class="relative block px-3 py-2 transition hover:text-holy-action"
          aria-label={link.label}
          href={link.url}
        >
          {link.title}
        </a>
      ))
    }
    
    <!-- Separador visual -->
    <div class="w-px h-6 bg-holy-neutral/30 mx-2"></div>
    
    <!-- Control de tema -->
    <div class="flex items-center">
      <ThemeToggle />
    </div>
  </nav>

  <!-- Menú móvil - posicionado en la esquina superior derecha -->
  <div class="md:hidden fixed top-4 right-4 z-50">
    <MobileMenu />
  </div>
</header>

<script>
  document.addEventListener("astro:page-load", () => {
    const sections = document.querySelectorAll("section")
    const navItems = document.querySelectorAll("header nav a")

    const callback = (entries: IntersectionObserverEntry[]) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (item.getAttribute("aria-label") == entry.target.id) {
              item.classList.add("text-holy-action")
              item.classList.remove("text-holy-text-secondary")
            } else {
              item.classList.remove("text-holy-action")
              item.classList.add("text-holy-text-secondary")
            }
          })
        }
      })
    }

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: "0px",
      threshold: 0.3,
    })

    sections.forEach((section) => {
      observer.observe(section)
    })

    // Cleanup function
    document.onvisibilitychange = () => {
      if (document.visibilityState === "hidden") {
        observer.disconnect()
      }
    }
  })
</script>

<style>
  nav {
    animation: nav-shadown 1s linear both;
    animation-timeline: scroll();
    animation-range: 0 100px;
  }

  @keyframes nav-shadown {
    to {
      @apply shadow-lg ring-1 backdrop-blur-md bg-holy-dark-secondary/90 ring-holy-action/20;
    }
  }

  /* Responsive breakpoints mejorados */
  @media (max-width: 1024px) {
    #header-nav a {
      padding: 0.5rem 0.75rem;
      font-size: 0.875rem;
    }
  }

  @media (max-width: 768px) {
    #header-nav {
      display: none !important;
    }
  }
</style>
