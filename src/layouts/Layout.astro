---
import "@fontsource-variable/onest"

import Header from "../components/Header.astro"
import Footer from "../components/Footer.astro"
import { ViewTransitions } from "astro:transitions"

interface Props {
  title: string
  description: string
  image?: string; // Opcional: URL de la imagen para redes sociales
}

const { description, title } = Astro.props
// Usar imagen por defecto si no se provee. Asegúrate de que esta imagen exista en public/
const image = new URL(Astro.props.image ?? "/default-og-image.png", Astro.site).href;
const canonicalURL = new URL(Astro.url.pathname, Astro.site); // Construir la URL canónica
---

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalURL} />

    <!-- Open Graph -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:image" content={image} />
    <meta property="og:type" content="website" /> 
    <meta property="og:locale" content="es_ES" />
    <meta property="og:site_name" content={"The Holy Code"} /> {/* Cambia esto si el nombre del sitio es diferente */} 

    <!-- Twitter Card -->
    <meta name="twitter:card" content="summary_large_image" /> {/* O 'summary' si prefieres una imagen pequeña */} 
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={image} />
    {/* <meta name="twitter:site" content="@tuUsuarioTwitter"> */}
    {/* <meta name="twitter:creator" content="@tuUsuarioCreador"> */} 

    <title>{title}</title>
    <ViewTransitions />

    {/* Schema Markup (JSON-LD) */}
    <script type="application/ld+json" set:html={JSON.stringify(
      {
        "@context": "https://schema.org",
        "@graph": [
          {
            "@type": "Person",
            "name": "Mauro Sánchez", 
            "url": canonicalURL.href, 
            "jobTitle": "Ingeniero de Software y Creador de Contenido", 
            "sameAs": [
              "https://linkedin.com/in/mesanchez91",
              "https://twitch.tv/holycode"
            ],
            "image": { 
              "@type": "ImageObject",
              "url": new URL("/me.webp", Astro.site).href, 
              "caption": "Mauro Sánchez"
            }
          },
          {
            "@type": "WebSite",
            "url": canonicalURL.href, 
            "name": title, 
            "description": description, 
            "publisher": { 
              "@type": "Person",
              "name": "Mauro Sánchez"
            }
          }
        ]
      }
    )} />

  </head>

  <body class="relative text-black dark:text-white">
    <div
      class="absolute top-0 bottom-0 z-[-2] min-h-screen w-full bg-gray-50 dark:bg-gray-950
      bg-[radial-gradient(ellipse_80%_80%_at_50%_-20%,rgba(217,216,255,0.5),rgba(255,255,255,0.9))]
      dark:bg-[radial-gradient(ellipse_80%_80%_at_50%_-20%,rgba(120,119,198,0.3),rgba(255,255,255,0))]"
    >
    </div>
    <Header />
    <slot />
    <Footer />
    <style is:global>
      :root {
        color-scheme: light dark;
      }

      html {
        font-family: "Onest Variable", system-ui, sans-serif;
        scroll-behavior: smooth;
      }

      body {
        color: rgba(17, 17, 17, 0.9);
        display: flex;
        flex-direction: column;
        min-height: 100vh;
        overscroll-behavior: none;
      }

      @media (prefers-reduced-motion: reduce) {
        html {
          scroll-behavior: auto;
        }
      }

      @media (prefers-color-scheme: dark) {
        body {
          color: rgba(255, 255, 255, 0.9);
        }
      }

      #header-nav {
        animation: blur linear both 0.5s;
        animation-timeline: scroll();
        animation-range: 0 500px;
      }

      @keyframes blur {
        to {
          backdrop-filter: blur(20px);
          border-width: 1px;
          border-color: rgba(0, 0, 0);
          padding: 0.25rem 0.75rem;
          display: flex;
          flex-direction: row;
          align-items: center;
          background-color: rgb(229, 229, 229);
          border-radius: 9999px;
        }
      }

      @media (prefers-color-scheme: dark) {
        @keyframes blur {
          from {
            border: 0px;
          }
          to {
            box-shadow:
              0px 5px 50px -5px rgba(0, 0, 0, 0.1),
              0px 0px 0 1px rgba(0, 0, 0, 0.3);
            background: rgba(0, 0, 0, 0.3);
            backdrop-filter: blur(20px);
            border-width: 1px;
            border-color: rgba(0, 0, 0);
            padding-left: 0.75rem;
            padding-right: 0.75rem;
            padding-top: 0.25rem;
            padding-bottom: 0.25rem;
            display: flex;
            flex-direction: row;
            align-items: center;
            background-color: rgba(0, 0, 0, 0.3);
            border-radius: 9999px;
          }
        }
      }
    </style>
  </body>
</html>
